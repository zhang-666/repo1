<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.dao.DictModelMapper" >
  <resultMap id="BaseResultMap" type="com.qf.pojo.DictModel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="model_name" property="modelName" jdbcType="VARCHAR" />
    <result column="model_id" property="modelId" jdbcType="INTEGER" />
    <result column="msrp_min" property="msrpMin" jdbcType="INTEGER" />
    <result column="space" property="space" jdbcType="TINYINT" />
    <result column="power" property="power" jdbcType="TINYINT" />
    <result column="comfort" property="comfort" jdbcType="TINYINT" />
    <result column="cost" property="cost" jdbcType="TINYINT" />
    <result column="safety" property="safety" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, country, model_name, model_id, msrp_min, space, power, comfort, cost, safety
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.pojo.DictModelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict_model
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dict_model
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dict_model
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.pojo.DictModelExample" >
    delete from dict_model
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.pojo.DictModel" >
    insert into dict_model (id, code, country, 
      model_name, model_id, msrp_min, 
      space, power, comfort, 
      cost, safety)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{modelName,jdbcType=VARCHAR}, #{modelId,jdbcType=INTEGER}, #{msrpMin,jdbcType=INTEGER}, 
      #{space,jdbcType=TINYINT}, #{power,jdbcType=TINYINT}, #{comfort,jdbcType=TINYINT}, 
      #{cost,jdbcType=TINYINT}, #{safety,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.pojo.DictModel" >
    insert into dict_model
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="modelName != null" >
        model_name,
      </if>
      <if test="modelId != null" >
        model_id,
      </if>
      <if test="msrpMin != null" >
        msrp_min,
      </if>
      <if test="space != null" >
        space,
      </if>
      <if test="power != null" >
        power,
      </if>
      <if test="comfort != null" >
        comfort,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="safety != null" >
        safety,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="modelName != null" >
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="modelId != null" >
        #{modelId,jdbcType=INTEGER},
      </if>
      <if test="msrpMin != null" >
        #{msrpMin,jdbcType=INTEGER},
      </if>
      <if test="space != null" >
        #{space,jdbcType=TINYINT},
      </if>
      <if test="power != null" >
        #{power,jdbcType=TINYINT},
      </if>
      <if test="comfort != null" >
        #{comfort,jdbcType=TINYINT},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=TINYINT},
      </if>
      <if test="safety != null" >
        #{safety,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.pojo.DictModelExample" resultType="java.lang.Integer" >
    select count(*) from dict_model
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dict_model
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.modelName != null" >
        model_name = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelId != null" >
        model_id = #{record.modelId,jdbcType=INTEGER},
      </if>
      <if test="record.msrpMin != null" >
        msrp_min = #{record.msrpMin,jdbcType=INTEGER},
      </if>
      <if test="record.space != null" >
        space = #{record.space,jdbcType=TINYINT},
      </if>
      <if test="record.power != null" >
        power = #{record.power,jdbcType=TINYINT},
      </if>
      <if test="record.comfort != null" >
        comfort = #{record.comfort,jdbcType=TINYINT},
      </if>
      <if test="record.cost != null" >
        cost = #{record.cost,jdbcType=TINYINT},
      </if>
      <if test="record.safety != null" >
        safety = #{record.safety,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dict_model
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      model_name = #{record.modelName,jdbcType=VARCHAR},
      model_id = #{record.modelId,jdbcType=INTEGER},
      msrp_min = #{record.msrpMin,jdbcType=INTEGER},
      space = #{record.space,jdbcType=TINYINT},
      power = #{record.power,jdbcType=TINYINT},
      comfort = #{record.comfort,jdbcType=TINYINT},
      cost = #{record.cost,jdbcType=TINYINT},
      safety = #{record.safety,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.pojo.DictModel" >
    update dict_model
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="modelName != null" >
        model_name = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="modelId != null" >
        model_id = #{modelId,jdbcType=INTEGER},
      </if>
      <if test="msrpMin != null" >
        msrp_min = #{msrpMin,jdbcType=INTEGER},
      </if>
      <if test="space != null" >
        space = #{space,jdbcType=TINYINT},
      </if>
      <if test="power != null" >
        power = #{power,jdbcType=TINYINT},
      </if>
      <if test="comfort != null" >
        comfort = #{comfort,jdbcType=TINYINT},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=TINYINT},
      </if>
      <if test="safety != null" >
        safety = #{safety,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.pojo.DictModel" >
    update dict_model
    set code = #{code,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      model_name = #{modelName,jdbcType=VARCHAR},
      model_id = #{modelId,jdbcType=INTEGER},
      msrp_min = #{msrpMin,jdbcType=INTEGER},
      space = #{space,jdbcType=TINYINT},
      power = #{power,jdbcType=TINYINT},
      comfort = #{comfort,jdbcType=TINYINT},
      cost = #{cost,jdbcType=TINYINT},
      safety = #{safety,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>