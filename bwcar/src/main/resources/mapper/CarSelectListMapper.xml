<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.dao.CarSelectListMapper" >
  <resultMap id="BaseResultMap" type="com.qf.pojo.CarSelectList" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="car_type" property="carType" jdbcType="VARCHAR" />
    <result column="car_type_bak" property="carTypeBak" jdbcType="BIT" />
    <result column="msrp_min" property="msrpMin" jdbcType="DECIMAL" />
    <result column="msrp_max" property="msrpMax" jdbcType="DECIMAL" />
    <result column="country_type" property="countryType" jdbcType="BIT" />
    <result column="country_std" property="countryStd" jdbcType="BIT" />
    <result column="space_std" property="spaceStd" jdbcType="DECIMAL" />
    <result column="power_std" property="powerStd" jdbcType="DECIMAL" />
    <result column="comfort_std" property="comfortStd" jdbcType="DECIMAL" />
    <result column="cost_std" property="costStd" jdbcType="DECIMAL" />
    <result column="safe_std" property="safeStd" jdbcType="DECIMAL" />
    <result column="car_id" property="carId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, country, car_type, car_type_bak, msrp_min, msrp_max, country_type, country_std, 
    space_std, power_std, comfort_std, cost_std, safe_std, car_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.pojo.CarSelectListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from car_select_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from car_select_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from car_select_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.pojo.CarSelectListExample" >
    delete from car_select_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.pojo.CarSelectList" >
    insert into car_select_list (id, type, country, 
      car_type, car_type_bak, msrp_min, 
      msrp_max, country_type, country_std, 
      space_std, power_std, comfort_std, 
      cost_std, safe_std, car_id
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{carType,jdbcType=VARCHAR}, #{carTypeBak,jdbcType=BIT}, #{msrpMin,jdbcType=DECIMAL}, 
      #{msrpMax,jdbcType=DECIMAL}, #{countryType,jdbcType=BIT}, #{countryStd,jdbcType=BIT}, 
      #{spaceStd,jdbcType=DECIMAL}, #{powerStd,jdbcType=DECIMAL}, #{comfortStd,jdbcType=DECIMAL}, 
      #{costStd,jdbcType=DECIMAL}, #{safeStd,jdbcType=DECIMAL}, #{carId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qf.pojo.CarSelectList" >
    insert into car_select_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="carType != null" >
        car_type,
      </if>
      <if test="carTypeBak != null" >
        car_type_bak,
      </if>
      <if test="msrpMin != null" >
        msrp_min,
      </if>
      <if test="msrpMax != null" >
        msrp_max,
      </if>
      <if test="countryType != null" >
        country_type,
      </if>
      <if test="countryStd != null" >
        country_std,
      </if>
      <if test="spaceStd != null" >
        space_std,
      </if>
      <if test="powerStd != null" >
        power_std,
      </if>
      <if test="comfortStd != null" >
        comfort_std,
      </if>
      <if test="costStd != null" >
        cost_std,
      </if>
      <if test="safeStd != null" >
        safe_std,
      </if>
      <if test="carId != null" >
        car_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="carType != null" >
        #{carType,jdbcType=VARCHAR},
      </if>
      <if test="carTypeBak != null" >
        #{carTypeBak,jdbcType=BIT},
      </if>
      <if test="msrpMin != null" >
        #{msrpMin,jdbcType=DECIMAL},
      </if>
      <if test="msrpMax != null" >
        #{msrpMax,jdbcType=DECIMAL},
      </if>
      <if test="countryType != null" >
        #{countryType,jdbcType=BIT},
      </if>
      <if test="countryStd != null" >
        #{countryStd,jdbcType=BIT},
      </if>
      <if test="spaceStd != null" >
        #{spaceStd,jdbcType=DECIMAL},
      </if>
      <if test="powerStd != null" >
        #{powerStd,jdbcType=DECIMAL},
      </if>
      <if test="comfortStd != null" >
        #{comfortStd,jdbcType=DECIMAL},
      </if>
      <if test="costStd != null" >
        #{costStd,jdbcType=DECIMAL},
      </if>
      <if test="safeStd != null" >
        #{safeStd,jdbcType=DECIMAL},
      </if>
      <if test="carId != null" >
        #{carId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.pojo.CarSelectListExample" resultType="java.lang.Integer" >
    select count(*) from car_select_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update car_select_list
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.carType != null" >
        car_type = #{record.carType,jdbcType=VARCHAR},
      </if>
      <if test="record.carTypeBak != null" >
        car_type_bak = #{record.carTypeBak,jdbcType=BIT},
      </if>
      <if test="record.msrpMin != null" >
        msrp_min = #{record.msrpMin,jdbcType=DECIMAL},
      </if>
      <if test="record.msrpMax != null" >
        msrp_max = #{record.msrpMax,jdbcType=DECIMAL},
      </if>
      <if test="record.countryType != null" >
        country_type = #{record.countryType,jdbcType=BIT},
      </if>
      <if test="record.countryStd != null" >
        country_std = #{record.countryStd,jdbcType=BIT},
      </if>
      <if test="record.spaceStd != null" >
        space_std = #{record.spaceStd,jdbcType=DECIMAL},
      </if>
      <if test="record.powerStd != null" >
        power_std = #{record.powerStd,jdbcType=DECIMAL},
      </if>
      <if test="record.comfortStd != null" >
        comfort_std = #{record.comfortStd,jdbcType=DECIMAL},
      </if>
      <if test="record.costStd != null" >
        cost_std = #{record.costStd,jdbcType=DECIMAL},
      </if>
      <if test="record.safeStd != null" >
        safe_std = #{record.safeStd,jdbcType=DECIMAL},
      </if>
      <if test="record.carId != null" >
        car_id = #{record.carId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update car_select_list
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      car_type = #{record.carType,jdbcType=VARCHAR},
      car_type_bak = #{record.carTypeBak,jdbcType=BIT},
      msrp_min = #{record.msrpMin,jdbcType=DECIMAL},
      msrp_max = #{record.msrpMax,jdbcType=DECIMAL},
      country_type = #{record.countryType,jdbcType=BIT},
      country_std = #{record.countryStd,jdbcType=BIT},
      space_std = #{record.spaceStd,jdbcType=DECIMAL},
      power_std = #{record.powerStd,jdbcType=DECIMAL},
      comfort_std = #{record.comfortStd,jdbcType=DECIMAL},
      cost_std = #{record.costStd,jdbcType=DECIMAL},
      safe_std = #{record.safeStd,jdbcType=DECIMAL},
      car_id = #{record.carId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.pojo.CarSelectList" >
    update car_select_list
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="carType != null" >
        car_type = #{carType,jdbcType=VARCHAR},
      </if>
      <if test="carTypeBak != null" >
        car_type_bak = #{carTypeBak,jdbcType=BIT},
      </if>
      <if test="msrpMin != null" >
        msrp_min = #{msrpMin,jdbcType=DECIMAL},
      </if>
      <if test="msrpMax != null" >
        msrp_max = #{msrpMax,jdbcType=DECIMAL},
      </if>
      <if test="countryType != null" >
        country_type = #{countryType,jdbcType=BIT},
      </if>
      <if test="countryStd != null" >
        country_std = #{countryStd,jdbcType=BIT},
      </if>
      <if test="spaceStd != null" >
        space_std = #{spaceStd,jdbcType=DECIMAL},
      </if>
      <if test="powerStd != null" >
        power_std = #{powerStd,jdbcType=DECIMAL},
      </if>
      <if test="comfortStd != null" >
        comfort_std = #{comfortStd,jdbcType=DECIMAL},
      </if>
      <if test="costStd != null" >
        cost_std = #{costStd,jdbcType=DECIMAL},
      </if>
      <if test="safeStd != null" >
        safe_std = #{safeStd,jdbcType=DECIMAL},
      </if>
      <if test="carId != null" >
        car_id = #{carId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.pojo.CarSelectList" >
    update car_select_list
    set type = #{type,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      car_type = #{carType,jdbcType=VARCHAR},
      car_type_bak = #{carTypeBak,jdbcType=BIT},
      msrp_min = #{msrpMin,jdbcType=DECIMAL},
      msrp_max = #{msrpMax,jdbcType=DECIMAL},
      country_type = #{countryType,jdbcType=BIT},
      country_std = #{countryStd,jdbcType=BIT},
      space_std = #{spaceStd,jdbcType=DECIMAL},
      power_std = #{powerStd,jdbcType=DECIMAL},
      comfort_std = #{comfortStd,jdbcType=DECIMAL},
      cost_std = #{costStd,jdbcType=DECIMAL},
      safe_std = #{safeStd,jdbcType=DECIMAL},
      car_id = #{carId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>