<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.dao.VisitLogMapper" >
  <resultMap id="BaseResultMap" type="com.qf.pojo.VisitLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="visitor_id" property="visitorId" jdbcType="BIGINT" />
    <result column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="visit_url" property="visitUrl" jdbcType="VARCHAR" />
    <result column="visit_ip" property="visitIp" jdbcType="VARCHAR" />
    <result column="visit_device" property="visitDevice" jdbcType="VARCHAR" />
    <result column="visit_source" property="visitSource" jdbcType="VARCHAR" />
    <result column="enter_time" property="enterTime" jdbcType="BIGINT" />
    <result column="exit_time" property="exitTime" jdbcType="BIGINT" />
    <result column="stay" property="stay" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, visitor_id, member_id, visit_url, visit_ip, visit_device, visit_source, enter_time, 
    exit_time, stay
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.pojo.VisitLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from visit_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from visit_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from visit_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.pojo.VisitLogExample" >
    delete from visit_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.pojo.VisitLog" >
    insert into visit_log (id, visitor_id, member_id, 
      visit_url, visit_ip, visit_device, 
      visit_source, enter_time, exit_time, 
      stay)
    values (#{id,jdbcType=BIGINT}, #{visitorId,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, 
      #{visitUrl,jdbcType=VARCHAR}, #{visitIp,jdbcType=VARCHAR}, #{visitDevice,jdbcType=VARCHAR}, 
      #{visitSource,jdbcType=VARCHAR}, #{enterTime,jdbcType=BIGINT}, #{exitTime,jdbcType=BIGINT}, 
      #{stay,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.pojo.VisitLog" >
    insert into visit_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="visitorId != null" >
        visitor_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="visitUrl != null" >
        visit_url,
      </if>
      <if test="visitIp != null" >
        visit_ip,
      </if>
      <if test="visitDevice != null" >
        visit_device,
      </if>
      <if test="visitSource != null" >
        visit_source,
      </if>
      <if test="enterTime != null" >
        enter_time,
      </if>
      <if test="exitTime != null" >
        exit_time,
      </if>
      <if test="stay != null" >
        stay,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="visitorId != null" >
        #{visitorId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="visitUrl != null" >
        #{visitUrl,jdbcType=VARCHAR},
      </if>
      <if test="visitIp != null" >
        #{visitIp,jdbcType=VARCHAR},
      </if>
      <if test="visitDevice != null" >
        #{visitDevice,jdbcType=VARCHAR},
      </if>
      <if test="visitSource != null" >
        #{visitSource,jdbcType=VARCHAR},
      </if>
      <if test="enterTime != null" >
        #{enterTime,jdbcType=BIGINT},
      </if>
      <if test="exitTime != null" >
        #{exitTime,jdbcType=BIGINT},
      </if>
      <if test="stay != null" >
        #{stay,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.pojo.VisitLogExample" resultType="java.lang.Integer" >
    select count(*) from visit_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update visit_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.visitorId != null" >
        visitor_id = #{record.visitorId,jdbcType=BIGINT},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.visitUrl != null" >
        visit_url = #{record.visitUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.visitIp != null" >
        visit_ip = #{record.visitIp,jdbcType=VARCHAR},
      </if>
      <if test="record.visitDevice != null" >
        visit_device = #{record.visitDevice,jdbcType=VARCHAR},
      </if>
      <if test="record.visitSource != null" >
        visit_source = #{record.visitSource,jdbcType=VARCHAR},
      </if>
      <if test="record.enterTime != null" >
        enter_time = #{record.enterTime,jdbcType=BIGINT},
      </if>
      <if test="record.exitTime != null" >
        exit_time = #{record.exitTime,jdbcType=BIGINT},
      </if>
      <if test="record.stay != null" >
        stay = #{record.stay,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update visit_log
    set id = #{record.id,jdbcType=BIGINT},
      visitor_id = #{record.visitorId,jdbcType=BIGINT},
      member_id = #{record.memberId,jdbcType=BIGINT},
      visit_url = #{record.visitUrl,jdbcType=VARCHAR},
      visit_ip = #{record.visitIp,jdbcType=VARCHAR},
      visit_device = #{record.visitDevice,jdbcType=VARCHAR},
      visit_source = #{record.visitSource,jdbcType=VARCHAR},
      enter_time = #{record.enterTime,jdbcType=BIGINT},
      exit_time = #{record.exitTime,jdbcType=BIGINT},
      stay = #{record.stay,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.pojo.VisitLog" >
    update visit_log
    <set >
      <if test="visitorId != null" >
        visitor_id = #{visitorId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="visitUrl != null" >
        visit_url = #{visitUrl,jdbcType=VARCHAR},
      </if>
      <if test="visitIp != null" >
        visit_ip = #{visitIp,jdbcType=VARCHAR},
      </if>
      <if test="visitDevice != null" >
        visit_device = #{visitDevice,jdbcType=VARCHAR},
      </if>
      <if test="visitSource != null" >
        visit_source = #{visitSource,jdbcType=VARCHAR},
      </if>
      <if test="enterTime != null" >
        enter_time = #{enterTime,jdbcType=BIGINT},
      </if>
      <if test="exitTime != null" >
        exit_time = #{exitTime,jdbcType=BIGINT},
      </if>
      <if test="stay != null" >
        stay = #{stay,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.pojo.VisitLog" >
    update visit_log
    set visitor_id = #{visitorId,jdbcType=BIGINT},
      member_id = #{memberId,jdbcType=BIGINT},
      visit_url = #{visitUrl,jdbcType=VARCHAR},
      visit_ip = #{visitIp,jdbcType=VARCHAR},
      visit_device = #{visitDevice,jdbcType=VARCHAR},
      visit_source = #{visitSource,jdbcType=VARCHAR},
      enter_time = #{enterTime,jdbcType=BIGINT},
      exit_time = #{exitTime,jdbcType=BIGINT},
      stay = #{stay,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>